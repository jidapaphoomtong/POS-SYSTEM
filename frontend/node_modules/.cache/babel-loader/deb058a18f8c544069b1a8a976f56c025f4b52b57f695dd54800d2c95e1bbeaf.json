{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import\"../styles/SelectBranch.css\";import{FaTh,FaList,FaStore}from\"react-icons/fa\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SelectBranch(){const[branches,setBranches]=useState([]);const[selectedBranch,setSelectedBranch]=useState(null);const[viewMode,setViewMode]=useState(\"grid\");const navigate=useNavigate();const[searchTerm,setSearchTerm]=useState(\"\");const filteredBranches=branches.filter(branch=>branch.name&&branch.name.toLowerCase().includes(searchTerm.toLowerCase()));useEffect(()=>{const fetchBranches=async()=>{try{const response=await axios.get(\"http://localhost:5293/api/Admin/branches\",{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"authToken\"))}});const data=response.data.data;if(Array.isArray(data)){setBranches(data);}else{console.error(\"Unexpected data format:\",response.data);setBranches([]);}}catch(error){console.error(\"Error fetching branches:\",error);}};fetchBranches();},[]);const handleSelectBranch=branchName=>{setSelectedBranch(branchName);navigate(\"/sale?branch=\".concat(branchName));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Select Department\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"search-bar\",type:\"text\",placeholder:\"Search...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(FaTh,{onClick:()=>setViewMode(\"grid\"),style:{cursor:\"pointer\",color:viewMode===\"grid\"?\"#5995fd\":\"#c0c0c0\"}}),/*#__PURE__*/_jsx(FaList,{onClick:()=>setViewMode(\"list\"),style:{cursor:\"pointer\",color:viewMode===\"list\"?\"#5995fd\":\"#c0c0c0\"}})]}),/*#__PURE__*/_jsx(\"div\",{className:viewMode===\"grid\"?\"branch-grid\":\"branch-list\",children:filteredBranches.map(branch=>/*#__PURE__*/_jsxs(\"div\",{className:\"branch-card \".concat(selectedBranch===branch.name?\"active\":\"\"),onClick:()=>handleSelectBranch(branch.name),children:[/*#__PURE__*/_jsx(\"img\",{src:branch.iconUrl||\"https://via.placeholder.com/50\"// alt={branch.name || \"Branch\"}\n}),/*#__PURE__*/_jsx(\"p\",{children:branch.name||\"Unnamed Branch\"})]},branch.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),children:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/department\"),children:\"Check Department\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","FaTh","FaList","FaStore","jsx","_jsx","jsxs","_jsxs","SelectBranch","branches","setBranches","selectedBranch","setSelectedBranch","viewMode","setViewMode","navigate","searchTerm","setSearchTerm","filteredBranches","filter","branch","name","toLowerCase","includes","fetchBranches","response","get","headers","Authorization","concat","localStorage","getItem","data","Array","isArray","console","error","handleSelectBranch","branchName","className","children","type","placeholder","value","onChange","e","target","onClick","style","cursor","color","map","src","iconUrl","id"],"sources":["C:/Users/Programmer2/Documents/POS-SYSTEM/frontend/src/components/SelectBranch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/SelectBranch.css\";\r\nimport { FaTh, FaList, FaStore } from \"react-icons/fa\";\r\n\r\nexport default function SelectBranch() {\r\n    const [branches, setBranches] = useState([]);\r\n    const [selectedBranch, setSelectedBranch] = useState(null);\r\n    const [viewMode, setViewMode] = useState(\"grid\");\r\n    const navigate = useNavigate();\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const filteredBranches = branches.filter(branch =>\r\n        branch.name && branch.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:5293/api/Admin/branches\", {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` },\r\n                });\r\n                const data = response.data.data;\r\n                if (Array.isArray(data)) {\r\n                    setBranches(data);\r\n                } else {\r\n                    console.error(\"Unexpected data format:\", response.data);\r\n                    setBranches([]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching branches:\", error);\r\n            }\r\n        };\r\n\r\n        fetchBranches();\r\n    }, []);\r\n\r\n    const handleSelectBranch = (branchName) => {\r\n        setSelectedBranch(branchName);\r\n        navigate(`/sale?branch=${branchName}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"header\">Select Department</h1>\r\n            <div className=\"search-container\">\r\n                <input \r\n                    className=\"search-bar\" \r\n                    type=\"text\" \r\n                    placeholder=\"Search...\" \r\n                    value={searchTerm} \r\n                    onChange={(e) => setSearchTerm(e.target.value)} \r\n                />\r\n                <FaTh\r\n                    onClick={() => setViewMode(\"grid\")}\r\n                    style={{ cursor: \"pointer\", color: viewMode === \"grid\" ? \"#5995fd\" : \"#c0c0c0\" }}\r\n                />\r\n                <FaList\r\n                    onClick={() => setViewMode(\"list\")}\r\n                    style={{ cursor: \"pointer\", color: viewMode === \"list\" ? \"#5995fd\" : \"#c0c0c0\" }}\r\n                />\r\n            </div>\r\n            <div className={viewMode === \"grid\" ? \"branch-grid\" : \"branch-list\"}>\r\n                {filteredBranches.map((branch) => (\r\n                    <div \r\n                        key={branch.id} \r\n                        className={`branch-card ${selectedBranch === branch.name ? \"active\" : \"\"}`} \r\n                        onClick={() => handleSelectBranch(branch.name)}\r\n                    >\r\n                        <img \r\n                            src={branch.iconUrl || \"https://via.placeholder.com/50\"} \r\n                            // alt={branch.name || \"Branch\"}\r\n                        />\r\n                        <p>{branch.name || \"Unnamed Branch\"}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <button onClick={() => navigate(\"/\")}>Back</button>\r\n                <button onClick={() => navigate(\"/department\")}>Check Department</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}